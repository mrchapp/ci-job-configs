#include tcwg/default.yaml.inc

- job:
#if HW_any
    name: tcwg-benchmark
#else
    name: tcwg-benchmark-#{HW}
#endif
    project-type: freestyle
    defaults: global
    properties:
      - default-properties
    parameters:
        - choice:
            name: bmk_hw
            choices:
#if HW_any
              - sq
              - tk1
              - tx1
#else
              - #{HW}
#endif
            description: 'Hardware to use for benchmarking'
        - string:
            name: toolchain_url
            default: ''
            description: 'Toolchain URL. Either http[s]://xxx.tar.xz, rsync://machine:/path/bin/target-triplet-, or ssh://machine/path/compiler'
        - choice:
            name: toolchain_type
            choices:
              - auto
              - gnu
              - llvm
        - string:
            name: sysroot
            default: 'tarball'
            description: 'Rsync-friendly path to the sysroot to run against; use libs from toolchain_url tarball/rsync if "tarball"; use system libs if empty'
        - string:
           name: bench_list
#if HW_stm32
           default: 'coremark'
#else
           default: 'all'
#endif
           description: 'List of benchmarks to run (from spec2k6). Use "all" to run all of them.'
        - string:
            name: cflags
            default: ''
            description: 'CFLAGS to use'
        - string:
            name: ldflags
            default: 'default'
            description: 'LDFLAGS to use'
        - choice:
            name: extension
            choices:
              - default
              - O2
              - O3
              - O2g
              - O3g
              - Ofast
              - Os
            description: 'Compilation profile'
        - choice:
            name: testmode
            choices:
              - verify
              - build
              - benchmark
            description: 'Whether to just build or run full benchmarks'
        - string:
            name: iterations
            default: '1'
            description: 'Number of benchmark iterations'
        - string:
            name: results_id
#if HW_stm32
            default: 'stm32_STM32L476RGTx/tcwg-benchmark/@build_num@'
#else
            default: '@hw_tag@/tcwg-benchmark/@build_num@'
#endif
            description: 'ID for benchmarking results; results will appear in bkp-01.tcwglab:/home/tcwg-benchmark/results-$results_id/'
        - bool:
            name: forceinstall
#if HW_stm32
            default: 'true'
#else
            default: 'false'
#endif
            description: 'Force clean re-install of benchmark sources'
        - choice:
            name: run_profile
            choices:
              - parallel
              - serial
            description: 'Run benchmarks in parallel or serially.'
        - choice:
            name: image_arch
            choices:
#if HW_tx1 || HW_sq
              - arm64
#endif
              - armhf
            description: 'Docker image architecture -- arm64 or armhf'
        - bool:
            name: reboot
            default: 'false'
            description: 'Reboot the board before building and running the benchmarks.'
        - string:
            name: displaytag
            default: '#$BUILD_NUMBER'
            description: 'Tag to display in the Jenkins console, so that the build name is more meaningful'
        - bool:
            name: ignore_errors
            default: 'false'
            description: 'Ignore build errors as much as possible'
        - string:
            name: clean_older_than
            default: '60'
            description: 'Delete previous results older than X days (on board)'
        - string:
            name: builder
            default: 'tcwg-x86_64-build'
            description: 'Builder -- jenkins label or node'
        - string:
            name: scripts_branch
            default: master
            description: 'Jenkins-scripts branch to use'
        - string:
            name: bmk_branch
            default: master
            description: 'Bmk-scripts branch to use'
#if HW_any
        - node:
            name: bmk_node
            default-slaves:
              - tcwg-bmk-bkp-01
            allowed-slaves:
              - tcwg-bmk-bkp-01
              - tcwg-bmk-sq
              - tcwg-bmk-stm32
              - tcwg-bmk-tk1
              - tcwg-bmk-tx1
            description: 'Bmk node; used internally, do not touch'
#endif
    disabled: false
    concurrent: true
#if !HW_any
    display-name: 'TCWG Benchmark #{HW}'
#else
    display-name: 'TCWG Benchmark'
#endif
    workspace: workspace/tcwg-benchmark-${NODE_NAME}_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
      - bmk-scripts
    wrappers:
        - timeout:
            timeout: 900
        - timestamps
        - ssh-agent-credentials:
            users:
                - 'tcwg-benchmark'
        - build-name:
            name: '$displaytag'
    builders:
      - conditional-step:
          condition-kind: execution-node
          nodes:
            - tcwg-bmk-bkp-01
          steps:
            - shell:
                command: |
                  #!/bin/bash

                  set -euf -o pipefail
                  set -x

                  rm -rf artifacts
                  mkdir artifacts

                  n_boards=$(set +f; ls -tr $HOME/boards/tcwg-bmk-$bmk_hw-*.lock | wc -l)
                  count=1
                  while read -a bmks; do
                    echo "bench_list=${bmks[@]}" > artifacts/bmk-$count-parameters
                    echo "displaytag=#$BUILD_NUMBER-$bmk_hw-$count" >> artifacts/bmk-$count-parameters
                    echo "bmk_node=tcwg-bmk-$bmk_hw" >> artifacts/bmk-$count-parameters
                    count=$(($count+1))
                  done < <(./bmk-scripts/break-up-bmks.sh \
                             --bench_list "$bench_list" \
                             --bmk_hw "$bmk_hw" \
                             --n_boards "$n_boards" \
                             --run_profile "$run_profile")
            - trigger-builds:
                - project: tcwg-benchmark
                  block: true
                  current-parameters: true
                  parameter-factories:
                    - factory: filebuild
                      file-pattern: artifacts/bmk-*-parameters
      - conditional-step:
          condition-kind: not
          condition-operand:
            condition-kind: execution-node
            nodes:
              - tcwg-bmk-bkp-01
          steps:
            - shell:
                command: |
                  #!/bin/bash

                  set -euf -o pipefail
                  set -x

                  rm -rf artifacts
                  mkdir artifacts

                  while true; do
                    for lock in $(set +f; ls -tr $HOME/boards/$NODE_NAME-*.lock); do
                      (
                        flock -en -E 123 9
                        touch $lock
                        NODE_NAME=$(cat <&9)
                        export NODE_NAME
#if HW_stm32
                        exec ./jenkins-scripts/tcwg-benchmark-bare.sh
#else
                        exec ./jenkins-scripts/tcwg-benchmark.sh
#endif
                      ) 9<$lock &
                      res=0 && wait $! || res=$?
                      if [ $res != 123 ]; then
                        exit $res
                      fi
                    done
                    sleep 30
                  done
                unstable-return: 125
    publishers:
      - archive:
          artifacts: 'artifacts/**'
          latest-only: false
          allow-empty: true
