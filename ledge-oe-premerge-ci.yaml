- job:
    name: ledge-oe-premerge-ci
    project-type: matrix
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
            linaro:
                - job-read
                - job-extended-read
                - job-build
                - job-cancel
        - github:
            url: https://github.com/Linaro/meta-ledge
    parameters:
        - string:
            name: IMAGES
            default: 'ledge-gateway ledge-iot ledge-gateway-lava ledge-iot-lava'
        - string:
            name: MANIFEST_BRANCH
            default: 'master'
        - string:
            name: PUB_DEST
            default: 'components/ledge/oe/pemerge-ci/${MACHINE}/${BUILD_NUMBER}/${DISTRO}'
        - string:
            name: LAVA_SERVER
            default: 'validation.linaro.org/RPC2/'
        - string:
            name: QA_SERVER
            default: 'https://qa-reports.linaro.org'
        - string:
            name: QA_SERVER_PROJECT
            default: 'ledge'
        - string:
            name: QA_SERVER_TEAM
            default: 'ledge'
        - string:
            name: AUTH_GROUPS
            default: 'linaro'
        - string:
            name: KERNEL_ARGS
            default: ''
    disabled: false
    node: master
    display-name: 'Pre merge CI for LEDGE OE build'
    scm:
        - git:
            url: https://github.com/Linaro/meta-ledge
            refspec: +refs/pull/*:refs/remotes/origin/pr/*
            name: origin
            branches:
                - ${sha1}
            skip-tag: true
            shallow-clone: true
            wipe-workspace: true
    triggers:
        - github-pull-request:
            github-hooks: true
            permit-all: true
            white-list-target-branches:
                - 'zeus'
            auth-id: 'GITHUB_TOKEN'
    axes:
        - axis:
            type: user-defined
            name: MACHINE
            values:
                - 'ledge-qemux86-64'
                - 'ledge-multi-armv7'
                - 'ledge-multi-armv8'
        - axis:
            type: user-defined
            name: DISTRO
            values:
                - rpb
        - axis:
            type: slave
            name: label
            values:
                - docker-stretch-amd64
    execution-strategy:
        sequential: false
    wrappers:
        - timeout:
            timeout: 250
        - timestamps
        - ssh-agent-credentials:
            users:
                - 'OE_COMMIT_BOT_KEY'
        - credentials-binding:
            - text:
                credential-id: QA_REPORTS_TOKEN
                variable: QA_REPORTS_TOKEN
    builders:
        - shell: |
            #!/bin/bash

            # Mapping for MACHINE -> DEVICE_TYPE
            case "${MACHINE}" in
              ledge-ti-am572x)
                DEVICE_TYPE=x15-bl_uefi
                ;;
              ledge-qemux86-64)
                DEVICE_TYPE=qemux86_64uefi
                ;;
              ledge-qemuarm)
                DEVICE_TYPE=qemuarmuefi
                ;;
              ledge-qemuarm64)
                DEVICE_TYPE=qemuarm64uefi
                ;;
              ledge-synquacer)
                DEVICE_TYPE=synquacer
                ;;
              ledge-stm32mp157c-dk2)
                DEVICE_TYPE=stm32mp157c-dk2
                ;;
              *)
                echo "Skip DEVICE_TYPE for ${MACHINE}"
                ;;
            esac

            echo "DEVICE_TYPE=${DEVICE_TYPE}" > device_type_parameters
        - inject:
            properties-file: device_type_parameters
        - shell:
            !include-raw: ledge/oe/builders.sh
        - inject:
            properties-file: post_build_lava_parameters
        - linaro-publish-token
        - shell:
            !include-raw: rpb-openembedded/buildinfo-protected.sh
        - shell:
            !include-raw: rpb-openembedded/publishers.sh
        - shell: |
            if [ ${MACHINE} = "am57xx-evm" ]; then
                   export LAVA_SERVER="validation.linaro.org/RPC2/"
            fi

            [ -z "${KSELFTEST_PATH}" ] && export KSELFTEST_PATH="/opt/kselftests/mainline/"
            [ -z "${LAVA_JOB_PRIORITY}" ] && export LAVA_JOB_PRIORITY="25"
            [ -z "${SANITY_LAVA_JOB_PRIORITY}" ] && export SANITY_LAVA_JOB_PRIORITY="30"
            [ -z "${SKIP_LAVA}" ] || unset DEVICE_TYPE
            [ -z "${QA_SERVER_TEAM}" ] && export QA_SERVER_TEAM=rpb
            [ -z "${TOOLCHAIN}" ] && export TOOLCHAIN="unknown"
            [ -z "${TDEFINITIONS_REVISION}" ] && export TDEFINITIONS_REVISION="kselftest-5.1"
            [ -z "${MANIFEST_COMMIT}" ] && export MANIFEST_COMMIT="HEAD"
            # Used by DB410C's template:
            export RESIZE_ROOTFS=${RESIZE_ROOTFS:-}

            rm -rf configs
            git clone --depth 1 http://git.linaro.org/ci/job/configs.git

            if [ -z "${DEVICE_TYPE}" ]; then
                if [ "${MACHINE}" = "ledge-multi-armv7" ]; then
                    DEVICE_TYPE="qemuarmuefi stm32mp157c-dk2 x15-bl_uefi"
                elif [ "${MACHINE}" = "ledge-multi-armv8" ]; then
                    DEVICE_TYPE="qemuarm64uefi  synquacer"
                fi
            fi

            for DT in ${DEVICE_TYPE}; do
                  python configs/openembedded-lkft/submit_for_testing.py \
                     --device-type ${DT} \
                     --build-number ${BUILD_NUMBER} \
                     --lava-server ${LAVA_SERVER} \
                     --qa-server ${QA_SERVER} \
                     --qa-server-team ${QA_SERVER_TEAM} \
                     --qa-server-project ${QA_SERVER_PROJECT} \
                     --git-commit ${MANIFEST_COMMIT} \
                     --template-path configs/rpb-openembedded/lava-job-definitions \
                     --template-names template-boot.yaml
            done
    publishers:
        - groovy-postbuild:
            script:
                !include-raw:
                  - openembedded-lkft/postbuild.groovy
        - email:
            recipients: 'maxim.uvarov@linaro.org ilias.apalodimas@linaro.org christophe.priouzeau@linaro.org'
