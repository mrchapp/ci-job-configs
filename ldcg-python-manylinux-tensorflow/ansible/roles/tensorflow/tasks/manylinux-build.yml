- name: copy upper constraints
  template:
    src: "files/upper-constraints.txt"
    dest: "{{ wheels_dir }}/upper-constraints.txt"
    mode: 0400
    force: true

- name: create {{ py_ver }} virtualenv
  include_role:
    name: python
    tasks_from: virtualenv.yml

- name: populate {{ py_ver }} virtualenv
  pip:
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_command: "/opt/python/{{ py_ver }}/bin/python3 -mvenv"
    extra_args: "--extra-index-url {{ pip_extra_index_url }} -c '{{ wheels_dir }}/upper-constraints.txt'"
    name:
      - keras
      - portpicker
      - tensorboard
      - tensorflow_estimator

- name: build and install wheels of binary Python packages
  include_role:
    name: python
    tasks_from: wheel.yml
  loop:
    - grpcio
    - "numpy{{ numpy_version }}"
    - "h5py{{ h5py_version }}"
    - Keras_Applications
    - Keras_Preprocessing
    - scipy
  loop_control:
    loop_var: wheel_name

- name: remove TensorFlow {{ tensorflow_version }} sources from previous build
  file:
    path: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/"
    state: absent

- include: fetch.yml

- name: build TensorFlow {{ tensorflow_version }} for {{ py_ver }}  # noqa no-changed-when
  shell:
    cmd: |
      set -xe
      source {{ virtualenv_path }}/bin/activate
      expect configure_tensorflow
      bazel clean --expunge
      export BAZEL_LINKLIBS=-l%:libstdc++.a
      bazel build --config=nonccl //tensorflow/tools/pip_package:build_pip_package --verbose_failures
      mkdir tensorflow-pkg
      bazel-bin/tensorflow/tools/pip_package/build_pip_package --cpu --project_name tensorflow_aarch64 ./tensorflow-pkg
    chdir: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/"
    executable: /bin/bash

- name: Run unit tests on TensorFlow {{ tensorflow_version }} for {{ py_ver }}  # noqa no-changed-when
  shell:
    cmd: |
      set -xe
      source {{ virtualenv_path }}/bin/activate
      export BAZEL_LINKLIBS=-l%:libstdc++.a
      bazel test --flaky_test_attempts=3 --test_output=all --cache_test_results=no --config=nonccl \
                 --verbose_failures -- {{ tf_ver.value.unit_tests_include | join(" ") }} \
                 -{{ tf_ver.value.unit_tests_exclude | join(" -") }}
    chdir: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/"
    executable: /bin/bash
  when: tf_ver.value.run_unit_tests

- name: stop bazel server
  include_role:
    name: bazel
    tasks_from: stop.yml

- name: get list of wheel files
  find:
    path: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/tensorflow-pkg/"
    patterns: "tensorflow_*.whl"
    file_type: file
  register: wheel_files

- name: get filename of latest wheel
  set_fact:
    wheel_file: "{{ wheel_files.files | sort(attribute='mtime') | last }}"

- name: install Python package
  pip:
    name: "{{ wheel_file.path }}"
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "/opt/python/{{ py_ver }}/bin/python3"
    extra_args: "--extra-index-url {{ pip_extra_index_url }} -c '{{ wheels_dir }}/upper-constraints.txt'"

- name: copy resulting wheel
  copy:
    src: "{{ wheel_file.path }}"
    dest: "{{ wheels_dir }}"
    mode: 0666
