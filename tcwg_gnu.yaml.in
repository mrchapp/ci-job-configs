# Beware: git branch names need the 'refs/heads/' prefix, while tags need 'refs/tags/'
- project:
    name: #{RR}
    type_of_test: ""
    cron_master: 'H H * * *'
    cron_release: 'H H H/3 * *'
#if RR_tcwg_gcc
    ci_project:
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap
          cron_master: 'H H/6 * * *'
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_lto
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_O1
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_O3
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_debug
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_profiled
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_profiled_lto
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_profiled_lto_lean
      - tcwg_gcc_bootstrap:
          type_of_test: -bootstrap_ubsan
      - tcwg_gcc_check:
          cron_master: 'H H/6 * * *'
      - tcwg_gcc_check_bootstrap:
          type_of_test: -check_bootstrap
      - tcwg_gcc_check_bootstrap:
          type_of_test: -check_bootstrap_lto
#elif RR_tcwg_gnu_cross
    ci_project:
      - tcwg_gnu_cross_build:
          cron_master: 'H H/6 * * *'
      - tcwg_gnu_cross_check_gcc:
          cron_master: 'H H/6 * * *'
#elif RR_tcwg_gnu_native
    ci_project:
      - tcwg_gnu_native_build
      - tcwg_gnu_native_check_binutils
      - tcwg_gnu_native_check_gcc
      - tcwg_gnu_native_check_gdb
#endif
#if COMPONENTS_binutils
    binutils_url: git://sourceware.org/git/binutils-gdb.git
#endif
#if COMPONENTS_gcc
    gcc_url: https://github.com/gcc-mirror/gcc.git
#endif
#if COMPONENTS_glibc
    glibc_url: git://sourceware.org/git/glibc.git
#endif
#if COMPONENTS_gdb
    gdb_url: git://sourceware.org/git/binutils-gdb.git
#endif
#if COMPONENTS_qemu
    qemu_url: https://gitlab.com/qemu-project/qemu.git
#endif
    target:
#if RR_tcwg_gnu_cross
      - aarch64
      - arm
    node: tcwg-x86_64-build
#else
      - aarch64:
          node: tcwg-build && tcwg-armv8_64
          docker_arch: arm64
      - arm:
          node: tcwg-build && tcwg-armv8_32
          docker_arch: armhf
#endif
    jobs:
      - #{RR}-master
      - #{RR}-release

- job-group:
    name: #{RR}-master
    toolchain_ver: master
    cron: '{cron_master}'
#if COMPONENTS_binutils
    binutils_branch: refs/heads/master
#endif
#if COMPONENTS_gcc
    gcc_branch: refs/heads/master
#endif
#if COMPONENTS_linux
    linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
    linux_branch: refs/heads/master
#endif
#if COMPONENTS_glibc
    glibc_branch: refs/heads/master
#endif
#if COMPONENTS_gdb
    gdb_branch: refs/heads/master
#endif
#if COMPONENTS_qemu
    qemu_branch: refs/heads/master
#endif
    distro: lts
    jobs:
      - '{ci_project}-build-{toolchain_ver}-{target}{type_of_test}'
      - '{ci_project}-bisect-{toolchain_ver}-{target}{type_of_test}'

- job-group:
    name: #{RR}-release
    toolchain_ver: release
    cron: '{cron_release}'
#if COMPONENTS_binutils
    binutils_branch: refs/heads/binutils-2_37-branch
#endif
#if COMPONENTS_gcc
    gcc_branch: refs/heads/releases/gcc-11
#endif
#if COMPONENTS_linux
    linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
    linux_branch: refs/heads/linux-rolling-stable
#endif
#if COMPONENTS_glibc
    glibc_branch: refs/heads/release/2.32/master
#endif
#if COMPONENTS_gdb
    gdb_branch: refs/heads/gdb-11-branch
#endif
#if COMPONENTS_qemu
    qemu_branch: refs/heads/master
#endif
    distro: lts_1
    jobs:
      - '{ci_project}-build-{toolchain_ver}-{target}{type_of_test}'
      - '{ci_project}-bisect-{toolchain_ver}-{target}{type_of_test}'

- view:
    name: #{RR}
    view-type: list
    regex: '#{RR}.*-build-.*'

#include tcwg/round-robin.yaml.inc

- job-template:
    name: '{ci_project}-build-{toolchain_ver}-{target}{type_of_test}'
    project-type: freestyle
    defaults: global
    properties:
      - default-properties
      - build-blocker:
          blocking-jobs:
            - "{ci_project}-bisect-{toolchain_ver}-{target}{type_of_test}"
          queue-scanning: 'ALL'
    parameters:
      - build-parameters:
          ci_project: '{ci_project}'
          ci_config: '{toolchain_ver}-{target}{type_of_test}'
          default_git: 'default'
          distro: '{distro}'
    disabled: false
    node: '{node} && tcwg-build'
    concurrent: false
    display-name: 'TCWG Build {ci_project}/{toolchain_ver}-{target}{type_of_test}'
    workspace: workspace/tcwg_gnu_$EXECUTOR_NUMBER
    scm:
      - build-scms:
#if COMPONENTS_binutils
          binutils_url: '{binutils_url}'
          binutils_branch: '{binutils_branch}'
#endif
#if COMPONENTS_gcc
          gcc_url: '{gcc_url}'
          gcc_branch: '{gcc_branch}'
#endif
#if COMPONENTS_linux
          linux_url: '{linux_url}'
          linux_branch: '{linux_branch}'
#endif
#if COMPONENTS_glibc
          glibc_url: '{glibc_url}'
          glibc_branch: '{glibc_branch}'
#endif
#if COMPONENTS_gdb
          gdb_url: '{gdb_url}'
          gdb_branch: '{gdb_branch}'
#endif
#if COMPONENTS_qemu
          qemu_url: '{qemu_url}'
          qemu_branch: '{qemu_branch}'
#endif
    triggers:
      - pollscm:
          cron: '{cron}'
    wrappers:
      - build-wrappers:
          timeout: 1000
    builders:
      - run-build:
          build_script: 'tcwg_gnu-build.sh'
          components: '#{COMPONENTS}'
          rr_project: '{ci_project}'
          job_suffix: '-{toolchain_ver}-{target}{type_of_test}'
#if RR_tcwg_gnu_native || RR_tcwg_gcc
          docker_arch: '{docker_arch}'
#endif
    publishers:
      - build-publishers

- job-template:
    name: '{ci_project}-bisect-{toolchain_ver}-{target}{type_of_test}'
    project-type: freestyle
    defaults: global
    properties:
      - default-properties
      - build-blocker:
          # Run at most 1 bisect job for all configurations.
          # Bisect jobs can easily run for 5+ hours, and a few of them
          # can hog the entire TCWG build farm for a long time.  Since
          # same regression tends to appear in multiple configurations,
          # run bisections for all configurations in-order.
          blocking-jobs:
            - "{ci_project}-bisect-.*"
          queue-scanning: 'BUILDABLE'
    parameters:
      - bisect-parameters:
          ci_project: '{ci_project}'
          ci_config: '{toolchain_ver}-{target}{type_of_test}'
          distro: '{distro}'
    disabled: false
    node: '{node} && tcwg-bisect'
    concurrent: false
    display-name: 'TCWG Bisect {ci_project}/{toolchain_ver}-{target}{type_of_test}'
    workspace: workspace/tcwg_gnu_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
    wrappers:
      - bisect-wrappers:
          timeout: 6000
    builders:
      - run-bisect:
          build_script: 'tcwg_gnu-build.sh'
          rr_project: '{ci_project}'
          job_suffix: '-{toolchain_ver}-{target}{type_of_test}'
#if RR_tcwg_gnu_native || RR_tcwg_gcc
          docker_arch: '{docker_arch}'
#endif
    publishers:
      - bisect-publishers
