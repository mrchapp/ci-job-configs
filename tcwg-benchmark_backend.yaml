# Auto generated by ./tcwg/generate-yamlfiles.sh from tcwg-benchmark.yaml.in and tcwg-benchmark/tcwg-benchmark_backend.def. Do not edit.
#BEGIN: tcwg/default.yaml.inc
# -*- mode: Yaml -*-

- property:
    name: default-properties
    properties:
      - authorization:
          tcwg-benchmark:
            - job-read
            - job-extended-read
            - job-build
            - job-cancel
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 100

- scm:
    name: jenkins-scripts
    scm:
      - git:
          url: https://git.linaro.org/toolchain/jenkins-scripts.git
          refspec: +refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*
          branches:
            - $scripts_branch
          basedir: jenkins-scripts
          skip-tag: true
          reference-repo: /home/tcwg-buildslave/snapshots-ref/jenkins-scripts.git
          wipe-workspace: false
          clean:
            before: true
          prune: true

- scm:
    name: bmk-scripts
    scm:
      - git:
          url: https://git.linaro.org/toolchain/bmk-scripts.git
          refspec: +refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*
          branches:
            - $bmk_branch
          basedir: bmk-scripts
          skip-tag: true
          reference-repo: /home/tcwg-buildslave/snapshots-ref/bmk-scripts.git
          wipe-workspace: false
          clean:
            before: true
          prune: true
#END:   tcwg/default.yaml.inc

- job:
    name: tcwg-benchmark_backend
    project-type: freestyle
    defaults: global
    properties:
      - default-properties
    parameters:
        - choice:
            name: bmk_hw
            choices:
              - sq
              - stm32
              - tk1
              - tx1
            description: 'Hardware to use for benchmarking'
        - string:
            name: toolchain_url
            default: ''
            description: 'Toolchain URL. Either http[s]://xxx.tar.xz, rsync://machine:/path/bin/target-triplet-, or ssh://machine/path/compiler'
        - choice:
            name: toolchain_type
            choices:
              - auto
              - gnu
              - llvm
        - string:
            name: sysroot
            default: 'tarball'
            description: 'Rsync-friendly path to the sysroot to run against; use libs from toolchain_url tarball/rsync if "tarball"; use system libs if empty'
        - string:
           name: bench_list
           default: 'all'
           description: 'List of benchmarks to run (from spec2k6). Use "all" to run all of them.'
        - string:
            name: cflags
            default: ''
            description: 'CFLAGS to use'
        - string:
            name: ldflags
            default: 'default'
            description: 'LDFLAGS to use'
        - choice:
            name: extension
            choices:
              - default
              - O2
              - O3
              - O2g
              - O3g
              - Ofast
              - Os
            description: 'Compilation profile'
        - choice:
            name: testmode
            choices:
              - verify
              - build
              - benchmark
            description: 'Whether to just build or run full benchmarks'
        - string:
            name: iterations
            default: '1'
            description: 'Number of benchmark iterations'
        - string:
            name: results_id
            description: 'ID for benchmarking results; results will appear in bkp-01.tcwglab:/home/tcwg-benchmark/results-$results_id/'
        - bool:
            name: forceinstall
            default: 'false'
            description: 'Force clean re-install of benchmark sources'
        - choice:
            name: run_profile
            choices:
              - parallel
              - serial
            description: 'Run benchmarks in parallel or serially.'
        - choice:
            name: image_arch
            choices:
              - arm64
              - armhf
            description: 'Docker image architecture -- arm64 or armhf'
        - bool:
            name: reboot
            default: 'false'
            description: 'Reboot the board before building and running the benchmarks.'
        - string:
            name: displaytag
            default: '$bmk_hw'
            description: 'Tag to display in the Jenkins console, so that the build name is more meaningful'
        - bool:
            name: ignore_errors
            default: 'false'
            description: 'Ignore build errors as much as possible'
        - string:
            name: clean_older_than
            default: '60'
            description: 'Delete previous results older than X days (on board)'
        - string:
            name: builder
            default: 'tcwg-x86_64-build'
            description: 'Builder -- jenkins label or node'
        - string:
            name: scripts_branch
            default: master
            description: 'Jenkins-scripts branch to use'
        - string:
            name: bmk_branch
            default: master
            description: 'Bmk-scripts branch to use'
        - node:
            name: bmk_node
            default-slaves:
              - tcwg-bmk-bkp-01
            allowed-slaves:
              - tcwg-bmk-bkp-01
              - tcwg-bmk-sq
              - tcwg-bmk-stm32
              - tcwg-bmk-tk1
              - tcwg-bmk-tx1
            description: 'Bmk node; used internally, do not touch'
    disabled: false
    concurrent: true
    display-name: 'TCWG Benchmark_backend'
    workspace: workspace/tcwg-benchmark-${NODE_NAME}_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
      - bmk-scripts
    wrappers:
        - timeout:
            timeout: 900
        - timestamps
        - ssh-agent-credentials:
            users:
                - 'tcwg-benchmark'
        - build-name:
            name: '#$BUILD_NUMBER-$displaytag'
    builders:
      - shell:
          command: |
            #!/bin/bash

            set -ef -o pipefail
            set -x

            rm -rf artifacts
            mkdir -p artifacts/jenkins

            while true; do
              for lock in $(set +f; ls -tr $HOME/boards/$NODE_NAME-*.lock); do
                (
                  flock -en -E 123 9
                  touch $lock
                  boardname=$(cat <&9)
                  export boardname
                  echo "#$BUILD_NUMBER-$displaytag-$boardname" > artifacts/jenkins/build-name
                  if [ x"$bmk_hw" = x"stm32" ]; then
                    exec ./jenkins-scripts/tcwg-benchmark-bare.sh
                  else
                    exec ./jenkins-scripts/tcwg-benchmark.sh \
                      --boardname "$boardname" \
                      --toolchain_url "$toolchain_url" \
                      --toolchain_type "$toolchain_type" \
                      --sysroot "$sysroot" \
                      --bench_list "$bench_list" \
                      --cflags "$cflags" \
                      --ldflags "$ldflags" \
                      --extension "$extension" \
                      --testmode "$testmode" \
                      --iterations "$iterations" \
                      --results_id "$results_id" \
                      --forceinstall "$forceinstall" \
                      --run_profile "$run_profile" \
                      --image_arch "$image_arch" \
                      --reboot "$reboot" \
                      --ignore_errors "$ignore_errors" \
                      --clean_older_than "$clean_older_than" \
                      --builder "$builder" \
                      --BUILD_NUMBER "$BUILD_NUMBER" \
                      --WORKSPACE "$WORKSPACE"
                  fi
                ) 9<$lock &
                res=0 && wait $! || res=$?
                if [ $res != 123 ]; then
                  exit $res
                fi
              done
              sleep 30
            done
          unstable-return: 125
      - build-name-setter:
          name: 'artifacts/jenkins/build-name'
          file: true
    publishers:
      - archive:
          artifacts: 'artifacts/**'
          latest-only: false
          allow-empty: true
# checksum: 1fff735d72666249920380e34772e10c
