- job:
    name: linaro-art-scripts-presubmit
    project-type: freestyle
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-discover
            linaro-android-builders:
                - job-read
                - job-extended-read
                - job-workspace
            linaro-art:
                - job-build
                - job-read
                - job-extended-read
                - job-workspace
        - build-discarder:
            days-to-keep: 60
            num-to-keep: 60
    disabled: false
    node: docker-xenial-aosp
    display-name: 'Scripts: Presubmit Test'
    concurrent: true
    triggers:
        - gerrit:
            server-name: android-review.linaro.org
            override-votes: true
            gerrit-build-successful-verified-value: 1
            gerrit-build-failed-verified-value: -1
            trigger-on:
                - patchset-created-event
            projects:
                - project-compare-type: 'PLAIN'
                  project-pattern: 'linaro-art/art-build-scripts'
                  branches:
                      - branch-pattern: 'master'
            silent: false
            silent-start: true
    wrappers:
        - timestamps
        - timeout:
            timeout: 10
    builders:
        - shell: |
            #!/bin/bash -xe

            ART_BUILD_SCRIPTS_DIR="${WORKSPACE}/art-build-scripts"

            if [[ -e "${ART_BUILD_SCRIPTS_DIR}/.git" ]]; then
              cd "${ART_BUILD_SCRIPTS_DIR}"
              # We want to keep the gitignored shellcheck binary, so no -x flag
              git clean -fd
              git reset --hard
            else
              # Make sure the target dir does not exist, so the clone won't fail
              rm -rf "${ART_BUILD_SCRIPTS_DIR}"
              git clone "https://android-git.linaro.org/git/linaro-art/art-build-scripts.git" \
                        "${ART_BUILD_SCRIPTS_DIR}"
              cd "${ART_BUILD_SCRIPTS_DIR}"
            fi

            if ! { git fetch "http://${GERRIT_HOST}/${GERRIT_PROJECT}" "${GERRIT_REFSPEC}" &&
                        git checkout FETCH_HEAD; }; then
              git reset --hard
              echo "Error: *** Applying patch with git fetch && git checkout FAILED"
              exit 1
            fi

            perl ${ART_BUILD_SCRIPTS_DIR}/jenkins/test_launcher.pl \
              ${ART_BUILD_SCRIPTS_DIR}/presubmit.sh
    publishers:
        - email:
            recipients: 'vishal.bhoj@linaro.org daniel.diaz@linaro.org akos.denke@linaro.org'
